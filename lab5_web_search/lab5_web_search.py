# %% [markdown]
# # üöÄ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞: LangChain - —Å–æ–∑–¥–∞–Ω–∏–µ –º–æ—â–Ω—ã—Ö AI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ LLM
# 
# ## üìö –í–≤–µ–¥–µ–Ω–∏–µ
# 
# –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π –º–∏—Ä LangChain! –í —ç—Ç–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç–µ –≤—ã –æ—Å–≤–æ–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏ –º–æ—â–Ω—ã—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Large Language Models (LLM).
# 
# **–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ?** –ë–æ–ª—å—à–∏–µ —è–∑—ã–∫–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –ø—Ä–æ–∏–∑–≤–µ–ª–∏ —Ä–µ–≤–æ–ª—é—Ü–∏—é –≤ AI, –Ω–æ –∏—Ö —Ä–µ–∞–ª—å–Ω–∞—è —Å–∏–ª–∞ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –º—ã –º–æ–∂–µ–º:
# * –ü–æ–¥–∫–ª—é—á–∞—Ç—å –∏—Ö –∫ –≤–Ω–µ—à–Ω–∏–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º –¥–∞–Ω–Ω—ã—Ö
# * –†–∞—Å—à–∏—Ä—è—Ç—å –∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å –ø–æ–º–æ—â—å—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
# * –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Ü–µ–ø–æ—á–∫–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–π
# * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∏—Ö –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏
# 
# LangChain —Ä–µ—à–∞–µ—Ç –≤—Å–µ —ç—Ç–∏ –∑–∞–¥–∞—á–∏ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–º–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –≠—Ç–æ—Ç –Ω–∞–≤—ã–∫ —Å–µ–≥–æ–¥–Ω—è –≤—ã—Å–æ–∫–æ —Ü–µ–Ω–∏—Ç—Å—è –Ω–∞ —Ä—ã–Ω–∫–µ —Ç—Ä—É–¥–∞ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π.
# 
# ## üéØ –ß–µ–º—É –≤—ã –Ω–∞—É—á–∏—Ç–µ—Å—å:
# 
# 1. **üß© –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ LangChain** - –∫–ª—é—á–µ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è AI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
# 2. **üîÑ –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–¥–µ–ª–µ–π** - –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ LLM —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π API
# 3. **üõ†Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è** - –∫–∞–∫ –¥–∞—Ç—å –º–æ–¥–µ–ª—è–º –Ω–æ–≤—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
# 4. **ü§ñ Intelligent Agents** - –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–º–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤, —Ä–µ—à–∞—é—â–∏—Ö —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏
# 5. **üîå –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏** - —Ä–∞–∑–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ä–∞–±–æ—Ç–µ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
# 6. **üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö** - –∫–∞–∫ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã
# 
# –ì–æ—Ç–æ–≤—ã –ø–µ—Ä–µ–π—Ç–∏ –æ—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è LLM –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã—Ö AI-—Å–∏—Å—Ç–µ–º? –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º!
# 


# %% [markdown]
# ## –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞: –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫

# %%
import pandas as pd
from dotenv import load_dotenv
import os
from typing import Dict, List, Any, Optional

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ["OPENAI_API_KEY"] = ""
os.environ["TAVILY_API_KEY"] = ""

# –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ LangChain
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser
from langchain_openai import ChatOpenAI
from langchain_community.tools import TavilySearchResults
from langchain.agents import create_openai_tools_agent, AgentExecutor
from langchain_core.tools import tool
from langchain_core.messages import HumanMessage, SystemMessage
from pydantic import BaseModel, Field

# %% [markdown]
# ## 1. –ß—Ç–æ —Ç–∞–∫–æ–µ LangChain –∏ –ø–æ—á–µ–º—É —ç—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å
# 
# **üí° –û—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è**: LangChain ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –∞ –Ω–∞—Å—Ç–æ—è—â–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ LLM.
# 
# –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ LangChain –∫–∞–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä LEGO –¥–ª—è AI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –í–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –≤—Å—ë —Å –Ω—É–ª—è, 
# –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–±–æ—Ä –≥–æ—Ç–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏—è—Ö:
# 
# * **–ú–æ–¥–µ–ª–∏** - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenAI, Anthropic, Hugging Face –∏ –¥—Ä—É–≥–∏–º–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏
# * **–ü—Ä–æ–º–ø—Ç—ã** - —à–∞–±–ª–æ–Ω—ã –∏ —Ç–µ—Ö–Ω–∏–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è —Å LLM
# * **–¶–µ–ø–æ—á–∫–∏** - –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á
# * **–ê–≥–µ–Ω—Ç—ã** - –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã, —Å–ø–æ—Å–æ–±–Ω—ã–µ –≤—ã–±–∏—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
# * **–ü–∞–º—è—Ç—å** - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –∏—Å—Ç–æ—Ä–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
# * **–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã** - —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π LLM –≤–Ω–µ—à–Ω–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
# 
# –í —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –ø—Ä–æ—Å—Ç—É—é —Ü–µ–ø–æ—á–∫—É, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑:
# 1. –ü—Ä–æ–º–ø—Ç–∞ (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–µ–ª–∏)
# 2. –ú–æ–¥–µ–ª–∏ (LLM –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞)
# 3. –ü–∞—Ä—Å–µ—Ä–∞ (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏)

# %%
# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ LangChain
def what_is_langchain():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–º–ø—Ç
    prompt = ChatPromptTemplate.from_messages([
        ("system", """–í—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –Ω–∞ LangChain —Å –≥–ª—É–±–æ–∫–∏–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä LLM.
        
        –û–±—ä—è—Å–Ω–∏—Ç–µ –≤ 3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö, —á—Ç–æ —Ç–∞–∫–æ–µ LangChain –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.
        –£–∫–∞–∂–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
        """
        ),
        ("human", "{input}")
    ])
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å
    model = ChatOpenAI(model="gpt-4o-mini", temperature=0)
    
    # –°–æ–∑–¥–∞–µ–º —Ü–µ–ø–æ—á–∫—É: –ø—Ä–æ–º–ø—Ç -> –º–æ–¥–µ–ª—å -> –ø–∞—Ä—Å–µ—Ä
    # –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω —Ä–∞–±–æ—Ç—ã —Å LangChain
    chain = prompt | model | StrOutputParser()
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
    response = chain.invoke({"input": "–ß—Ç–æ —Ç–∞–∫–æ–µ LangChain –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?"})
    print(response)
    return response

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print("\n=== 1. –ß—Ç–æ —Ç–∞–∫–æ–µ LangChain ===")
langchain_info = what_is_langchain()

# %% [markdown]
# ## 2. –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π: –æ–¥–∏–Ω –∫–æ–¥ –¥–ª—è –≤—Å–µ—Ö LLM
# 
# **üí° –ö–ª—é—á–µ–≤–æ–π –ø—Ä–∏–Ω—Ü–∏–ø**: –ù–∞–ø–∏—Å–∞–≤ –∫–æ–¥ –æ–¥–∏–Ω —Ä–∞–∑, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ —Å —Ä–∞–∑–Ω—ã–º–∏ —è–∑—ã–∫–æ–≤—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
# 
# –í —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö —á–∞—Å—Ç–æ –≤–æ–∑–Ω–∏–∫–∞—é—Ç —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ–≥–¥–∞ –≤–∞–º –Ω—É–∂–Ω–æ:
# * –°—Ä–∞–≤–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—É —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –Ω–∞ –æ–¥–Ω–∏—Ö –∏ —Ç–µ—Ö –∂–µ –∑–∞–¥–∞—á–∞—Ö
# * –õ–µ–≥–∫–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –º–µ–∂–¥—É –º–æ–¥–µ–ª—è–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, GPT-4 –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á, –∞ –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–µ –∏ –¥–µ—à–µ–≤—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö)
# * –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–µ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É
# 
# LangChain —Ä–µ—à–∞–µ—Ç —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∫–æ—Ç–æ—Ä—ã–π:
# * –°–∫—Ä—ã–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–∏—è –≤ API —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
# * –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
# * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–º–µ–Ω—è—Ç—å –º–æ–¥–µ–ª–∏ –±—É–∫–≤–∞–ª—å–Ω–æ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π –∫–æ–¥–∞
# 
# –í —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º –æ–¥–Ω—É –∏ —Ç—É –∂–µ –∑–∞–¥–∞—á—É –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª—è—Ö –∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏:

# %%
# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –µ–¥–∏–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
def demonstrate_model_interface():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–º–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å —Ä–∞–∑–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏
    prompt = ChatPromptTemplate.from_messages([
        ("system", """–í—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º AI. 
        –û–±—ä—è—Å–Ω–∏—Ç–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º—É–º)."""),
        ("human", "{question}")
    ])
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –¥—Ä—É–≥–∏–µ –º–æ–¥–µ–ª–∏ (Claude, Llama, –∏ —Ç.–¥.)
    models = {
        "GPT-4o-mini (temp=0)": ChatOpenAI(model="gpt-4o-mini", temperature=0),
        "GPT-4o-mini (temp=0.7)": ChatOpenAI(model="gpt-4o-mini", temperature=0.7),
    }
    
    question = "–û–±—ä—è—Å–Ω–∏—Ç–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –≤ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö"
    
    # –û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏
    results = {}
    for name, model in models.items():
        chain = prompt | model | StrOutputParser()
        response = chain.invoke({"question": question})
        results[name] = response
        print(f"\n--- {name} ---")
        print(response)
    
    return results

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print("\n=== 2. –ï–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π ===")
model_comparison = demonstrate_model_interface()

# %% [markdown]
# ## 3. Tools –≤ LLM: —Ä–∞—Å—à–∏—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–µ–π
# 
# **üí° –ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ**: –Ø–∑—ã–∫–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã —Ç–µ–º, —á—Ç–æ –æ–Ω–∏ –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç. –° –ø–æ–º–æ—â—å—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –º—ã –¥–∞–µ–º –º–æ–¥–µ–ª—è–º "—Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏" - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –º–∏—Ä–µ.
# 
# **üîç –ê–Ω–∞–ª–æ–≥–∏—è**: –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –æ—á–µ–Ω—å —É–º–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –º–Ω–æ–≥–æ –∑–Ω–∞–µ—Ç, –Ω–æ –Ω–µ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Å—Ç—ã–µ –¥–µ–π—Å—Ç–≤–∏—è - –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä, –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–ª–æ–∂–Ω—É—é —Ñ–æ—Ä–º—É–ª—É –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. Tools –≤ LangChain —Ä–µ—à–∞—é—Ç –∏–º–µ–Ω–Ω–æ —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É!
# 
# –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –º—ã:
# * –°–æ–∑–¥–∞–¥–∏–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å –ø–æ–º–æ—â—å—é –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ `@tool`
# * –ü–æ–∫–∞–∂–µ–º, –∫–∞–∫ –º–æ–¥–µ–ª—å –º–æ–∂–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ—à–∏—Ç—å, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
# * –ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –≤—ã–∑–æ–≤–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
# 
# **üöÄ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ**: –í —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å LLM-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç:
# * –ò—Å–∫–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ
# * –†–∞–±–æ—Ç–∞—Ç—å —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
# * –í—ã–ø–æ–ª–Ω—è—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã
# * –í—ã–∑—ã–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ API
# * –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
# 
# –ö–æ–≥–¥–∞ –≤—ã –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–¥, –≤—ã —É–≤–∏–¥–∏—Ç–µ —Ç–∞–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:
# ```
# –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è: 413  # –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ 12 * 34 + 5
# ```
# 
# –ù–æ —á—Ç–æ –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ - –º—ã —É–≤–∏–¥–∏–º, –∫–∞–∫ –º–æ–¥–µ–ª—å —Å–∞–º–∞ —Ä–µ—à–∞–µ—Ç, –∫–æ–≥–¥–∞ –µ–π –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –∞ –∫–æ–≥–¥–∞ –æ–Ω–∞ –º–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å —Å–∞–º–∞.

# %%
# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –≤ LangChain
def demonstrate_tools():
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    @tool
    def calculator(expression: str) -> float:
        """–í—ã—á–∏—Å–ª—è–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.
        
        Args:
            expression: –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '2 + 2' –∏–ª–∏ '3 * 5')
        
        Returns:
            –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
        """
        try:
            # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
            result = eval(expression)
            print(f"[DEBUG] –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—ã—á–∏—Å–ª–∏–ª: {expression} = {result}")
            return result
        except Exception as e:
            error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏: {e}"
            print(f"[DEBUG] {error_msg}")
            return error_msg
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    tools = [calculator]
    
    # 1. –ë–∞–∑–æ–≤–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä—è–º–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    print("\n1. –ü—Ä—è–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞:")
    calculation_result = calculator.invoke("12 * 34 + 5")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è: {calculation_result}")
 
    # 2. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ –º–æ–¥–µ–ª—å
    print("\n2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ –º–æ–¥–µ–ª—å:")
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å —Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π 0 –¥–ª—è –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    model = ChatOpenAI(model="gpt-4o-mini", temperature=0)
    
    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫ –º–æ–¥–µ–ª–∏ —Å –ø–æ–º–æ—â—å—é .bind_tools()
    # –≠—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –≤ LangChain –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Å—Ö–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –º–æ–¥–µ–ª–∏
    model_with_tools = model.bind_tools(tools)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è –º–æ–¥–µ–ª–∏
    system_message = """–í—ã - –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞.
    
    –ò–ù–°–¢–†–£–ö–¶–ò–ò:
    1. –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
    2. –ù–ò–ö–û–ì–î–ê –Ω–µ –ø—ã—Ç–∞–π—Ç–µ—Å—å –≤—ã—á–∏—Å–ª–∏—Ç—å –æ—Ç–≤–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
    3. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    4. –í—ã–∑–æ–≤–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å —ç—Ç–∏–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º
    5. –í–µ—Ä–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    
    –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
    –î–ª—è —Ä–µ—à–µ–Ω–∏—è —è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: [–≤—ã—Ä–∞–∂–µ–Ω–∏–µ]
    –†–µ–∑—É–ª—å—Ç–∞—Ç: [—Ä–µ–∑—É–ª—å—Ç–∞—Ç]
    
    –ü–†–ò–ú–ï–†:
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ü–æ—Å—á–∏—Ç–∞–π 5 * 10
    –í—ã: –î–ª—è —Ä–µ—à–µ–Ω–∏—è —è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: 5 * 10
    –†–µ–∑—É–ª—å—Ç–∞—Ç: 50
    
    –¢–µ–ø–µ—Ä—å —Ä–µ—à–∏—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞."""
    
    # –°–æ–∑–¥–∞–µ–º —è–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ
    query = "25 * 16 - 38"
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ–¥–µ–ª–∏
    messages = [
        SystemMessage(content=system_message),
        HumanMessage(content=f"–†–µ—à–∏—Ç–µ —ç—Ç–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: {query}")
    ]
    
    # –í—ã–∑—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
    response = model_with_tools.invoke(messages)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–∑–æ–≤–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (tool_calls) –≤ –æ—Ç–≤–µ—Ç–µ
    print("\n–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:")
    tool_calls = getattr(response, "tool_calls", [])
    
    # –ö–æ–≥–¥–∞ –º–æ–¥–µ–ª—å –≤—ã–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –ø–æ–ª–µ content –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
    # –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –º—ã –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–∑–æ–≤–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
    if not response.content and tool_calls:
        print("–ú–æ–¥–µ–ª—å —Ä–µ—à–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –æ—Ç–≤–µ—Ç–∞.")
    else:
        print(response.content)
    
    if tool_calls:
        print("\n–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –≤—ã–∑–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª—å—é:")
        for call in tool_calls:
            print(f"- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: {call['name']}")
            print(f"  –ê—Ä–≥—É–º–µ–Ω—Ç—ã: {call['args']}")
            
            # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã–∑–≤–∞–Ω–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
            if call['name'] == 'calculator':
                tool_result = calculator.invoke(call['args']['expression'])
                print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {tool_result}")
                
                # –ï—Å–ª–∏ content –ø—É—Å—Ç, –º—ã –º–æ–∂–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–∑–æ–≤–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
                if not response.content:
                    print(f"\n–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–∑–æ–≤–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞:")
                    print(f"–î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è {query} –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä.")
                    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {tool_result}")
    else:
        print("\n–ú–æ–¥–µ–ª—å –Ω–µ –≤—ã–∑–≤–∞–ª–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.")
    
    # 3. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ (–≤—ã–∑–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ –≤ –º–æ–¥–µ–ª—å)
    print("\n3. –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (–≤—ã–∑–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –º–æ–¥–µ–ª—å):")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    new_query = "–ü–æ—Å—á–∏—Ç–∞–π –ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ —Å —Ä–∞–¥–∏—É—Å–æ–º 7 —Å–º"
    
    messages = [
        SystemMessage(content=system_message),
        HumanMessage(content=new_query)
    ]
    
    # –í—ã–∑—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è tool_calls
    first_response = model_with_tools.invoke(messages)
    
    # –¢–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
    messages.append(first_response)
    
    tool_calls = getattr(first_response, "tool_calls", [])
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –≤—ã–∑–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª—å—é
    if tool_calls:
        for call in tool_calls:
            if call['name'] == 'calculator':
                expression = call['args'].get('expression')
                if expression:
                    tool_result = calculator.invoke(expression)
                    print(f"–í—ã–ø–æ–ª–Ω–µ–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç {call['name']} —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º {expression}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {tool_result}")
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é –∫–∞–∫ ToolMessage
                    # –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ –º–æ–¥–µ–ª–∏
                    from langchain_core.messages import ToolMessage
                    
                    messages.append(
                        ToolMessage(
                            content=str(tool_result),
                            tool_call_id=call['id']
                        )
                    )
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        final_response = model.invoke(messages)
        print("\n–§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:")
        print(final_response.content)
    else:
        print("\n–ú–æ–¥–µ–ª—å –Ω–µ –≤—ã–∑–≤–∞–ª–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤ —ç—Ç–æ–º –∑–∞–ø—Ä–æ—Å–µ.")
    
    return {
        "calculation": calculation_result,
        "model_tool_usage": response.content,
        "tool_calls": tool_calls
    }

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print("\n=== 3. Tools –≤ LLM ===")
print("–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤ LangChain.")
print("–ù–∏–∂–µ –≤—ã —É–≤–∏–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –Ω–∞–ø—Ä—è–º—É—é –∏ —á–µ—Ä–µ–∑ –º–æ–¥–µ–ª—å.")
tool_demonstration = demonstrate_tools()

# %% [markdown]
# ## 4. –°–æ–∑–¥–∞–Ω–∏–µ AI-–∞–≥–µ–Ω—Ç–æ–≤: –∫–æ–≥–¥–∞ –º–æ–¥–µ–ª—å –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
# 
# **üí° –ö–æ–Ω—Ü–µ–ø—Ü–∏—è**: –ê–≥–µ–Ω—Ç—ã - —ç—Ç–æ —Å–∞–º—ã–π –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Å–ø–æ—Å–æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è LangChain. –ê–≥–µ–Ω—Ç - —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –æ —Ç–æ–º, –∫–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏.
# 
# **üß† –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç**: –ê–≥–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π, –≤—ã–±–∏—Ä–∞–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ —Å—É—Ç–∏, —ç—Ç–æ –º–∏–Ω–∏-–∫–æ–ø–∏—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤—Ä–æ–¥–µ ChatGPT, –Ω–æ —Å–æ–∑–¥–∞–Ω–Ω–∞—è –≤–∞–º–∏ –∏ –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏.
# 
# **üìã –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã —É–≤–∏–¥–∏—Ç–µ**:
# * –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –Ω–∞–±–æ—Ä —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
# * –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≥–µ–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ `create_openai_tools_agent`
# * –ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ `AgentExecutor` –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á
# 
# **üåü –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è**:
# * –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á
# * –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã, —Å–ø–æ—Å–æ–±–Ω—ã–µ —Å–æ–±–∏—Ä–∞—Ç—å –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
# * –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º AI
# * –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ "—É–º–Ω—ã—Ö" –±–æ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# 
# –í –Ω–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –∞–≥–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –∏ –Ω–∞—Å–µ–ª–µ–Ω–∏–∏ –≥–æ—Ä–æ–¥–æ–≤, –∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –æ–¥–Ω–æ–º –æ—Ç–≤–µ—Ç–µ.

# %%
# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤ LangChain
def demonstrate_tool_interface():
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    @tool
    def get_weather(location: str) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –º–µ—Å—Ç–µ."""
        weather_data = {
            "–ú–æ—Å–∫–≤–∞": "–û–±–ª–∞—á–Ω–æ, 18¬∞C",
            "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥": "–î–æ–∂–¥—å, 15¬∞C",
            "–ù—å—é-–ô–æ—Ä–∫": "–°–æ–ª–Ω–µ—á–Ω–æ, 25¬∞C",
            "–õ–æ–Ω–¥–æ–Ω": "–¢—É–º–∞–Ω, 14¬∞C"
        }
        return weather_data.get(location, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ –¥–ª—è {location} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    @tool
    def get_population(city: str) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å–µ–ª–µ–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞."""
        population_data = {
            "–ú–æ—Å–∫–≤–∞": "12 –º–ª–Ω —á–µ–ª–æ–≤–µ–∫",
            "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥": "5 –º–ª–Ω —á–µ–ª–æ–≤–µ–∫",
            "–ù—å—é-–ô–æ—Ä–∫": "8 –º–ª–Ω —á–µ–ª–æ–≤–µ–∫",
            "–õ–æ–Ω–¥–æ–Ω": "9 –º–ª–Ω —á–µ–ª–æ–≤–µ–∫"
        }
        return population_data.get(city, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å–µ–ª–µ–Ω–∏–∏ {city} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º
    llm = ChatOpenAI(model="gpt-4o-mini", temperature=0)
    tools_list = [get_weather, get_population, TavilySearchResults(max_results=2)]
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–µ–≥–æ
    # –≠—Ç–æ —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –æ–±–µ—Å–ø–µ—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    agent = create_openai_tools_agent(
        llm,
        tools_list,
        ChatPromptTemplate.from_messages([
            ("system", "–í—ã - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö. "
                      "–í—ã –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. "
                      "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã–±–∏—Ä–∞–π—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ —á–µ—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã."),
            ("user", "{input}"),
            ("assistant", "{agent_scratchpad}")
        ])
    )
    
    # –°–æ–∑–¥–∞–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∞–≥–µ–Ω—Ç–∞
    agent_executor = AgentExecutor(
        agent=agent,
        tools=tools_list,
        verbose=True,
        handle_parsing_errors=True
    )
    
    print("\n–ó–∞–ø—Ä–æ—Å –∞–≥–µ–Ω—Ç—É: '–ö–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ –∏ —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –∂–∏—Ç–µ–ª–µ–π?'")
    response = agent_executor.invoke({
        "input": "–ö–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ –∏ —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –∂–∏—Ç–µ–ª–µ–π?"
    })
    
    return {
        "input": "–ö–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ –∏ —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –∂–∏—Ç–µ–ª–µ–π?",
        "output": response["output"],
        "tools_used": [tool.name for tool in tools_list]
    }

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print("\n=== 4. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å tool –≤ LangChain ===")
agent_demonstration = demonstrate_tool_interface()

# %% [markdown]
# ## 5. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏: –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
# 
# **üí° –í–∞–∂–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø**: –ò–Ω–æ–≥–¥–∞ –ª—É—á—à–µ –Ω–µ –¥–æ–≤–µ—Ä—è—Ç—å –º–æ–¥–µ–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –≤—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –∞ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.
# 
# **üîÑ –î–≤–∞ –ø–æ–¥—Ö–æ–¥–∞ –∫ —Ä–∞–±–æ—Ç–µ —Å LLM**:
# 
# 1. **–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥** (–∫–æ—Ç–æ—Ä—ã–π –º—ã –≤–∏–¥–µ–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª–∞—Ö 3 –∏ 4):
#    * –ú–æ–¥–µ–ª—å —Å–∞–º–∞ —Ä–µ—à–∞–µ—Ç, –∫–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
#    * –í—ã –Ω–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç–µ, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞–µ—Ç –º–æ–¥–µ–ª—å
#    * –ë–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –Ω–æ –º–µ–Ω–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π
# 
# 2. **–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–π –ø–æ–¥—Ö–æ–¥** (–∫–æ—Ç–æ—Ä—ã–π –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Å–µ–π—á–∞—Å):
#    * –í—ã —è–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç–µ –Ω—É–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
#    * –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –º–æ–¥–µ–ª–∏
#    * –í—ã —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç–∞–∫, –∫–∞–∫ —Å—á–∏—Ç–∞–µ—Ç–µ –Ω—É–∂–Ω—ã–º
#    * –ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π, –Ω–æ –¥–∞–µ—Ç –±–æ–ª—å—à–µ –∫–æ–Ω—Ç—Ä–æ–ª—è –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç–∏
# 
# **üìö –ê–Ω–∞–ª–æ–≥–∏—è**: –≠—Ç–æ –∫–∞–∫ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Ç–µ–º, —á—Ç–æ–±—ã –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–Ω–∏–∫–∞ "—É–∑–Ω–∞–π –∏ —Ä–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ –ø–æ–≥–æ–¥–µ" –∏–ª–∏ —Å–∞–º–æ–º—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –∏ —Å–∫–∞–∑–∞—Ç—å "—Å —É—á–µ—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –¥–æ–∂–¥—å, —á—Ç–æ –º–Ω–µ –Ω–∞–¥–µ—Ç—å?"
# 
# **üî• –ö–æ–≥–¥–∞ —ç—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω–æ**:
# * –ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
# * –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ç–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–∞–¥ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
# * –î–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
# * –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º
# 
# –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –º—ã –ø–æ–∫–∞–∂–µ–º, –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –∞ –∑–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å LLM —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

# %%
# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥—Ö–æ–¥–∞ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
def demonstrate_two_tool_approaches():
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞
    search = TavilySearchResults(max_results=3)
    llm = ChatOpenAI(model="gpt-4o-mini", temperature=0)
    
    # –§–æ—Ä–º—É–ª–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞
    query = "–ö–∞–∫–∏–µ –∫–ª—é—á–µ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ LangChain?"
    
    print("\n–ü–æ–¥—Ö–æ–¥: –í—ã–∑–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –æ–±–æ–≥–∞—â–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
    print(f"–®–∞–≥ 1: –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: '{query}'")
    
    # –í—ã–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–∞–ø—Ä—è–º—É—é
    search_results = search.invoke(query)
    
    # –í—ã–≤–æ–¥–∏–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
    print("\n–®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ (–ø–µ—Ä–≤—ã–µ 2 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞):")
    for i, result in enumerate(search_results[:2]):
        print(f"\n–ò—Å—Ç–æ—á–Ω–∏–∫ {i+1}: {result['title']}")
        print(f"URL: {result['url']}")
        print(f"–§—Ä–∞–≥–º–µ–Ω—Ç: {result['content'][:150]}...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π —è–≤–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    print("\n–®–∞–≥ 3: –ü–µ—Ä–µ–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç")
    context_prompt = ChatPromptTemplate.from_messages([
        ("system", """–í—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –Ω–∞ LangChain. 
        
        –ò–ù–°–¢–†–£–ö–¶–ò–ò:
        1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¢–û–õ–¨–ö–û –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å.
        2. –ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ç–∞–∫ –∏ —Å–∫–∞–∂–∏—Ç–µ.
        3. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π—Ç–µ –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.
        4. –û–±—ä—è—Å–Ω—è–π—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º.
        """),
        ("human", "–ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–∏—Å–∫–∞:\n\n{context}\n\n–í–æ–ø—Ä–æ—Å: {query}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.")
    ])
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ü–µ–ø–æ—á–∫—É: –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º -> –º–æ–¥–µ–ª—å -> –ø–∞—Ä—Å–µ—Ä
    chain = context_prompt | llm | StrOutputParser()
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
    print("\n–®–∞–≥ 4: –ú–æ–¥–µ–ª—å —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
    response = chain.invoke({
        "context": str(search_results), 
        "query": query
    })
    
    print("\n–†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(response)
    
    print("\n–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —ç—Ç–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞:")
    print("1. –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø—Ä–æ—Ü–µ—Å—Å–æ–º –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
    print("2. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –º–æ–¥–µ–ª–∏")
    print("3. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
    print("4. –ë–æ–ª–µ–µ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    
    return {
        "query": query,
        "approach_response": response
    }

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print("\n=== 5. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏: –≤—ã–∑–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ ===")
tool_approaches = demonstrate_two_tool_approaches()

# %% [markdown]
# ## 6. –ê–Ω–∞–ª–∏–∑ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
# 
# **üí° –í–∞–∂–Ω–æ—Å—Ç—å —ç—Ç–∞–ø–∞**: –°–æ–∑–¥–∞–Ω–∏–µ AI-—Ä–µ—à–µ–Ω–∏–π ‚Äî —ç—Ç–æ –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–º–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ.
# 
# **üîç –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –º—ã**:
# * –°–æ–∑–¥–∞–¥–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é Pydantic
# * –°–æ—Ö—Ä–∞–Ω–∏–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
# * –ü–æ–∫–∞–∂–µ–º, –∫–∞–∫ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å LLM –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –≤—ã—è–≤–ª–µ–Ω–∏—è –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–µ–π
# 
# **üíº –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ**:
# * –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
# * –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ AI-—Ä–µ—à–µ–Ω–∏–π
# * –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–æ–≤ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–µ–π
# * –ê–Ω–∞–ª–∏–∑ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π –∏ –æ—Ç—á–µ—Ç–æ–≤
# 
# **üõ†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã**:
# * **Pydantic** ‚Äî –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
# * **Pandas** ‚Äî –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
# * **LangChain** ‚Äî –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é LLM
# 
# –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –º—ã –º–æ–∂–µ–º –∑–∞–º–∫–Ω—É—Ç—å —Ü–∏–∫–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ AI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–µ –∂–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã LangChain –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞—à–∏—Ö —Ä–µ—à–µ–Ω–∏–π.

# %%
# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Pydantic
class ExperimentResult(BaseModel):
    section: str = Field(description="–†–∞–∑–¥–µ–ª —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞")
    query: str = Field(description="–ó–∞–ø—Ä–æ—Å –∫ —Å–∏—Å—Ç–µ–º–µ")
    response: str = Field(description="–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏ –∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞")
    model: str = Field(description="–ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏")
    approach: str = Field(description="–ú–µ—Ç–æ–¥ –∏–ª–∏ —Ç–µ—Ö–Ω–∏–∫–∞, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–∞—è –≤ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–µ")
    prompt_technique: Optional[str] = Field(description="–¢–µ—Ö–Ω–∏–∫–∞ –ø—Ä–æ–º–ø—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω—è–ª–∞—Å—å", default=None)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ CSV
def save_results_to_csv():
    # –°–æ–±–∏—Ä–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å–µ—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤
    results = [
        ExperimentResult(
            section="–ß—Ç–æ —Ç–∞–∫–æ–µ LangChain",
            query="–ß—Ç–æ —Ç–∞–∫–æ–µ LangChain –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?",
            response=langchain_info,
            model="gpt-4o-mini",
            approach="basic",
            prompt_technique="–ë–∞–∑–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç"
        ),
        ExperimentResult(
            section="–ï–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
            query="–û–±—ä—è—Å–Ω–∏—Ç–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö",
            response=model_comparison["GPT-4o-mini (temp=0)"],
            model="GPT-4o-mini (temp=0)",
            approach="model_comparison",
            prompt_technique="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç"
        ),
        ExperimentResult(
            section="–ï–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
            query="–û–±—ä—è—Å–Ω–∏—Ç–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö",
            response=model_comparison["GPT-4o-mini (temp=0.7)"],
            model="GPT-4o-mini (temp=0.7)",
            approach="model_comparison",
            prompt_technique="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç"
        ),
        ExperimentResult(
            section="Tools –≤ LLM",
            query="12 * 34 + 5",
            response=str(tool_demonstration["calculation"]),
            model="calculator",
            approach="direct_tool",
            prompt_technique="–ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞"
        ),
        ExperimentResult(
            section="Tools –≤ LLM (—á–µ—Ä–µ–∑ –º–æ–¥–µ–ª—å)",
            query="25 * 16 - 38",
            response=tool_demonstration["model_tool_usage"],
            model="gpt-4o-mini",
            approach="model_with_tools",
            prompt_technique="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ –º–æ–¥–µ–ª—å"
        ),
        ExperimentResult(
            section="–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å tool",
            query="–ö–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ –∏ —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –∂–∏—Ç–µ–ª–µ–π?",
            response=agent_demonstration["output"],
            model="agent",
            approach="agent_with_tools",
            prompt_technique="–ê–≥–µ–Ω—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥"
        ),
        ExperimentResult(
            section="–î–≤–∞ –ø–æ–¥—Ö–æ–¥–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤",
            query=tool_approaches["query"],
            response=tool_approaches["approach_response"],
            model="gpt-4o-mini",
            approach="separate_tool_call",
            prompt_technique="–û—Ç–¥–µ–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞"
        )
    ]
    
    # –°–æ–∑–¥–∞–µ–º DataFrame
    df = pd.DataFrame([result.model_dump() for result in results])
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º LLM
    analysis_prompt = ChatPromptTemplate.from_messages([
        ("system", """–í—ã - –∞–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö LLM.
        
        –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ —Å LangChain:
        {experiment_data}
        
        –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ 3 –≥–ª–∞–≤–Ω—ã—Ö –≤—ã–≤–æ–¥–∞ –æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è LangChain –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —è–∑—ã–∫–æ–≤—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏.
        –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ –≤—ã–≤–æ–¥—ã –≤ –≤–∏–¥–µ —á–µ—Ç–∫–∏—Ö, –∫—Ä–∞—Ç–∫–∏—Ö –ø—É–Ω–∫—Ç–æ–≤."""),
        ("human", "–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤.")
    ])
    
    model = ChatOpenAI(model="gpt-4o-mini", temperature=0)
    chain = analysis_prompt | model | StrOutputParser()
    
    analysis = chain.invoke({"experiment_data": df.to_string()})
    print("\n–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤:")
    print(analysis)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
    csv_filename = "langchain_results.csv"
    df.to_csv(csv_filename, index=False, encoding='utf-8')
    
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {csv_filename}")
    print("\n–ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ DataFrame:")
    print(df[["section", "query", "model", "prompt_technique"]].head())
    
    return df

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print("\n=== 6. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å pandas –≤ CSV ===")
results_df = save_results_to_csv()

# %% [markdown]
# ## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ: —á—Ç–æ –¥–∞–ª—å—à–µ?
# 
# **üéì –ß—Ç–æ –≤—ã —É–∑–Ω–∞–ª–∏ –≤ —ç—Ç–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏**:
# 
# 1. **üß© –û—Å–Ω–æ–≤—ã LangChain** ‚Äî —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö AI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
# 2. **üîÑ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å** ‚Äî –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π API
# 3. **üõ†Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è LLM** ‚Äî –∫–∞–∫ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–µ–π –≤–Ω–µ—à–Ω–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
# 4. **ü§ñ –ê–≥–µ–Ω—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã** ‚Äî –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á
# 5. **üîå –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏** ‚Äî —Ä–∞–∑–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ä–∞–±–æ—Ç–µ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
# 6. **üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤** ‚Äî –∫–∞–∫ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤
# 
# **üöÄ –ò–¥–µ–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏–∑—É—á–µ–Ω–∏—è**:
# 
# * **–ü–∞–º—è—Ç—å –≤ LangChain** ‚Äî –∏–∑—É—á–∏—Ç–µ, –∫–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ª–≥–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–º—è—Ç—å –≤ –≤–∞—à–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# * **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö** ‚Äî –æ–±–æ–≥–∞—Ç–∏—Ç–µ –º–æ–¥–µ–ª–∏ —Å–≤–æ–∏–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –∏ –±–∞–∑–∞–º–∏ –∑–Ω–∞–Ω–∏–π
# * **–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤** ‚Äî –æ—Å–≤–æ–π—Ç–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤
# * **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö** ‚Äî –ø–æ–¥–∫–ª—é—á–∏—Ç–µ SQL –∏ NoSQL —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∫ –≤–∞—à–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º
# * **–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è** ‚Äî –¥–æ–±–∞–≤—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ –¥—Ä—É–≥–∏–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
# * **–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π** ‚Äî –∏–∑—É—á–∏—Ç–µ, –∫–∞–∫ –¥–µ–ø–ª–æ–∏—Ç—å LangChain-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ production
# 
# **üìö –†–µ—Å—É—Ä—Å—ã –¥–ª—è —É–≥–ª—É–±–ª–µ–Ω–∏—è**:
# * –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è LangChain: https://python.langchain.com/docs/
# * LangChain Community: https://python.langchain.com/docs/integrations
# * GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏: https://github.com/langchain-ai/langchain
# 
# **üí™ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç**: –õ—É—á—à–∏–π —Å–ø–æ—Å–æ–± –æ—Å–≤–æ–∏—Ç—å LangChain ‚Äî —ç—Ç–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ—à–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É. –ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Å–ª–æ–∂–Ω—è–π—Ç–µ –∑–∞–¥–∞—á—É, –¥–æ–±–∞–≤–ª—è—è –Ω–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!
